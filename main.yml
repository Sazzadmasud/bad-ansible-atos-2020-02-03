---
# Bad ansible! This playbook is an example of poor/bad practices!
# Bad practices may include:
#
#   Poor formatting and structure
#   Poor use of YAML - but good enough to parse
#   Inconsistent style
#   Incorrect use of modules
#   Poor module choice
#   Unclear names
#   Hard coding / poor use of variables
#   Roles - what are roles?
#   Bare variables
#   No use of handlers

- name: configuration
  hosts: all
  gather_facts: true
  become: true
  tasks:
  - name: Process common configuration
    include_role:
      name: three_tier_common

  - name: Configure Frontends
    include_role:
      name: three_tier_frontend
    when: "'frontends' in group_names"

  - name: Configure App Servers
    include_role:
      name: three_tier_app
    when: "'apps' in group_names"

- name: deploy postgres
  gather_facts: false
  become: true
  hosts: appdbs
  tasks:
  - name: install progress
    command: "yum install -y postgresql-server"

  #- name: install postgres
  #  yum:
  #    name: postgresql-server
  #    state: latest
  - name: enable apache at boot
    service:
      name: postgresql
      enabled: yes
  - name: tell user to finish setting up postgres
    debug:
      msg: "Either uncomment the postgres setup or manually login and initialize"

 # only run the next 2 tasks once!
  - name: initilize postgres
    command: postgresql-setup initdb
    register: r_postgres_initdb
    failed_when:
    - r_postgres_initdb.rc != 0
    - r_postgres_initdb.stdout != 'Data directory is not empty!'
    changed_when:
    - r_postgres_initdb.rc == 0

#  - name: initilize postgres some more
#    command: chkconfig postgresql on
  - name: start postgres
    service:
      name: postgresql.service
      state: started
